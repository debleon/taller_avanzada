// Interfaz para el comportamiento de ataque
interface AttackBehavior {
    void attack();
}

// Implementaciones concretas del comportamiento de ataque
class SwordAttack implements AttackBehavior {
    public void attack() {
        System.out.println("¡Ataque con espada!");
    }
}

class BowAttack implements AttackBehavior {
    public void attack() {
        System.out.println("¡Ataque con arco!");
    }
}

class LanceAttack implements AttackBehavior {
    public void attack() {
        System.out.println("¡Ataque con lanza!");
    }
}

// Clase principal de la unidad militar
class Unit {
    private AttackBehavior attackBehavior;

    public Unit(AttackBehavior attackBehavior) {
        this.attackBehavior = attackBehavior;
    }

    public void setAttackBehavior(AttackBehavior attackBehavior) {
        this.attackBehavior = attackBehavior;
    }

    public void performAttack() {
        attackBehavior.attack();
    }
}

// Clase principal del juego
public class StrategyPatternExample {
    public static void main(String[] args) {
        // Crear diferentes tipos de unidades con diferentes comportamientos de ataque
        Unit soldier = new Unit(new SwordAttack());
        Unit archer = new Unit(new BowAttack());
        Unit knight = new Unit(new LanceAttack());

        // Realizar ataques
        soldier.performAttack(); // Ataque con espada
        archer.performAttack(); // Ataque con arco
        knight.performAttack(); // Ataque con lanza

        // Cambiar el comportamiento de ataque en tiempo de ejecución
        soldier.setAttackBehavior(new BowAttack());
        soldier.performAttack(); // Ahora realiza un ataque con arco
    }
}

